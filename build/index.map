{"version":3,"sources":["index.js"],"names":["cookie","set","name","value","options","cookieExpires","cookiePath","cookieDomain","expires","mydate","Date","setDate","getDate","toGMTString","path","domain","document","encodeURIComponent","JSON","stringify","get","cookieArray","split","i","length","cookieName","result","parse","decodeURIComponent","remove","module","exports"],"mappings":";AAAA,IAAMA,SAAS;AACbC,OAAK,aAAUC,IAAV,EAAgBC,KAAhB,EAAqC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACxC,QAAIC,gBAAgB,EAApB;AACA,QAAIC,aAAa,EAAjB;AACA,QAAIC,eAAe,EAAnB;AACA,QAAIH,QAAQI,OAAZ,EAAqB;AACnB,UAAMC,SAAS,IAAIC,IAAJ,EAAf;AACAD,aAAOE,OAAP,CAAeF,OAAOG,OAAP,KAAmBR,QAAQI,OAA1C;AACAH,oCAA4BI,OAAOI,WAAP,EAA5B;AACD;AACD,QAAIT,QAAQU,IAAZ,EAAkBR,wBAAsBF,QAAQU,IAA9B;AAClB,QAAIV,QAAQW,MAAZ,EAAoBR,4BAA0BH,QAAQW,MAAlC;AACpBC,aAAShB,MAAT,GAAqBiB,mBAAmBf,IAAnB,CAArB,SAAiDe,mBAAmBC,KAAKC,SAAL,CAAehB,KAAf,CAAnB,CAAjD,GAA6FE,aAA7F,GAA6GC,UAA7G,GAA0HC,YAA1H;AACD,GAbY;AAcba,OAAK,aAAUlB,IAAV,EAAgB;AACnB,QAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AACX,QAAMmB,cAAcL,SAAShB,MAAT,CAAgBsB,KAAhB,CAAsB,IAAtB,CAApB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,YAAYG,MAAhC,EAAwCD,GAAxC,EAA6C;AAC3C,UAAME,aAAaJ,YAAYE,CAAZ,EAAeD,KAAf,CAAqB,GAArB,CAAnB;AACA,UAAIG,WAAW,CAAX,MAAkBR,mBAAmBf,IAAnB,CAAtB,EAAgD;AAC9C,YAAMwB,SAASR,KAAKS,KAAL,CAAWC,mBAAmBH,WAAW,CAAX,CAAnB,CAAX,CAAf;AACA,YAAIC,WAAW,EAAf,EAAmB,OAAO,IAAP;AACnB,eAAOA,MAAP;AACD;AACF;AACD,WAAO,IAAP;AACD,GA1BY;AA2BbG,UAAQ,gBAAU3B,IAAV,EAAgB;AACtB,SAAKD,GAAL,CAASC,IAAT,EAAe,EAAf,EAAmB,CAAC,CAApB;AACD;AA7BY,CAAf;;AAgCA4B,OAAOC,OAAP,GAAiB/B,MAAjB","file":"index.map","sourceRoot":"../src","sourcesContent":["const cookie = {\n  set: function (name, value, options = {}) {\n    let cookieExpires = '';\n    let cookiePath = '';\n    let cookieDomain = '';\n    if (options.expires) {\n      const mydate = new Date();\n      mydate.setDate(mydate.getDate() + options.expires);\n      cookieExpires = `;expires=${mydate.toGMTString()}`;\n    }\n    if (options.path) cookiePath = `;path=${options.path}`;\n    if (options.domain) cookieDomain = `;domain=${options.domain}`;\n    document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(JSON.stringify(value))}${cookieExpires}${cookiePath}${cookieDomain}`;\n  },\n  get: function (name) {\n    if (!name) return null;\n    const cookieArray = document.cookie.split('; ');\n    for (let i = 0; i < cookieArray.length; i++) {\n      const cookieName = cookieArray[i].split('=');\n      if (cookieName[0] === encodeURIComponent(name)) {\n        const result = JSON.parse(decodeURIComponent(cookieName[1]));\n        if (result === '') return null;\n        return result;\n      }\n    }\n    return null;\n  },\n  remove: function (name) {\n    this.set(name, '', -1);\n  },\n};\n\nmodule.exports = cookie;\n"]}