{"version":3,"sources":["index.js"],"names":["cookie","set","name","value","options","cookieExpirse","expirse","cookiePath","path","mydate","Date","setDate","getDate","domain","document","encodeURIComponent","JSON","stringify","toGMTString","cookieDomain","get","cookieArray","split","i","length","cookieName","result","parse","decodeURIComponent","remove","module","exports"],"mappings":";AAAA,IAAMA,SAAS;AACbC,OAAK,aAAUC,IAAV,EAAgBC,KAAhB,EAAqC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACxC,QAAMC,gBAAgBD,QAAQE,OAAR,IAAmB,CAAzC;AACA,QAAMC,aAAaH,QAAQI,IAAR,IAAgB,GAAnC;AACA,QAAIC,SAAS,IAAIC,IAAJ,EAAb;AACAD,WAAOE,OAAP,CAAeF,OAAOG,OAAP,KAAmBP,aAAlC;AACA,QAAID,QAAQS,MAAZ,EAAoB;AAClBC,eAASd,MAAT,GAAqBe,mBAAmBb,IAAnB,CAArB,SAAiDa,mBAAmBC,KAAKC,SAAL,CAAed,KAAf,CAAnB,CAAjD,iBAAsGM,OAAOS,WAAP,EAAtG,cAAmIX,UAAnI,gBAAwJY,YAAxJ;AACD,KAFD,MAEO;AACLL,eAASd,MAAT,GAAqBe,mBAAmBb,IAAnB,CAArB,SAAiDa,mBAAmBC,KAAKC,SAAL,CAAed,KAAf,CAAnB,CAAjD,iBAAsGM,OAAOS,WAAP,EAAtG,cAAmIX,UAAnI;AACD;AACF,GAXY;AAYba,OAAK,aAAUlB,IAAV,EAAgB;AACnB,QAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AACX,QAAMmB,cAAcP,SAASd,MAAT,CAAgBsB,KAAhB,CAAsB,IAAtB,CAApB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,YAAYG,MAAhC,EAAwCD,GAAxC,EAA6C;AAC3C,UAAME,aAAaJ,YAAYE,CAAZ,EAAeD,KAAf,CAAqB,GAArB,CAAnB;AACA,UAAIG,WAAW,CAAX,MAAkBV,mBAAmBb,IAAnB,CAAtB,EAAgD;AAC9C,YAAMwB,SAASV,KAAKW,KAAL,CAAWC,mBAAmBH,WAAW,CAAX,CAAnB,CAAX,CAAf;AACA,YAAIC,WAAW,EAAf,EAAmB,OAAO,IAAP;AACnB,eAAOA,MAAP;AACD;AACF;AACD,WAAO,IAAP;AACD,GAxBY;AAyBbG,UAAQ,gBAAU3B,IAAV,EAAgB;AACtB,SAAKD,GAAL,CAASC,IAAT,EAAe,EAAf,EAAmB,CAAC,CAApB;AACD;AA3BY,CAAf;;AA8BA4B,OAAOC,OAAP,GAAiB/B,MAAjB","file":"index.map","sourceRoot":"../src","sourcesContent":["const cookie = {\n  set: function (name, value, options = {}) {\n    const cookieExpirse = options.expirse || 7;\n    const cookiePath = options.path || '/';\n    let mydate = new Date();\n    mydate.setDate(mydate.getDate() + cookieExpirse);\n    if (options.domain) {\n      document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(JSON.stringify(value))};expirse=${mydate.toGMTString()};path=${cookiePath};domain=${cookieDomain}`;\n    } else {\n      document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(JSON.stringify(value))};expirse=${mydate.toGMTString()};path=${cookiePath}`;\n    }\n  },\n  get: function (name) {\n    if (!name) return null;\n    const cookieArray = document.cookie.split('; ');\n    for (let i = 0; i < cookieArray.length; i++) {\n      const cookieName = cookieArray[i].split('=');\n      if (cookieName[0] === encodeURIComponent(name)) {\n        const result = JSON.parse(decodeURIComponent(cookieName[1]));\n        if (result === '') return null;\n        return result;\n      }\n    }\n    return null;\n  },\n  remove: function (name) {\n    this.set(name, '', -1);\n  },\n};\n\nmodule.exports = cookie;\n"]}